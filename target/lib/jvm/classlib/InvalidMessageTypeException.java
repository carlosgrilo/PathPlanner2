// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

package classlib;

@net.sf.jni4net.attributes.ClrType
public class InvalidMessageTypeException extends system.Exception {
    
    //<generated-proxy>
    private static system.Type staticType;
    
    protected InvalidMessageTypeException(net.sf.jni4net.inj.INJEnv __env, long __handle) {
            super(__env, __handle);
    }
    
    @net.sf.jni4net.attributes.ClrConstructor("()V")
    public InvalidMessageTypeException() {
            super(((net.sf.jni4net.inj.INJEnv)(null)), 0);
        classlib.InvalidMessageTypeException.__ctorInvalidMessageTypeException0(this);
    }
    
    @net.sf.jni4net.attributes.ClrConstructor("(LSystem/String;LSystem/String;)V")
    public InvalidMessageTypeException(java.lang.String messageType, java.lang.String message) {
            super(((net.sf.jni4net.inj.INJEnv)(null)), 0);
        classlib.InvalidMessageTypeException.__ctorInvalidMessageTypeException1(this, messageType, message);
    }
    
    @net.sf.jni4net.attributes.ClrMethod("()V")
    private native static void __ctorInvalidMessageTypeException0(net.sf.jni4net.inj.IClrProxy thiz);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;Ljava/lang/String;)V")
    private native static void __ctorInvalidMessageTypeException1(net.sf.jni4net.inj.IClrProxy thiz, java.lang.String messageType, java.lang.String message);
    
    public static system.Type typeof() {
        return classlib.InvalidMessageTypeException.staticType;
    }
    
    private static void InitJNI(net.sf.jni4net.inj.INJEnv env, system.Type staticType) {
        classlib.InvalidMessageTypeException.staticType = staticType;
    }
    //</generated-proxy>
}
